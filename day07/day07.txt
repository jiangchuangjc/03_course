一、模块加载配置
  浏览器加载运行angularjs应用的流程:
    启动--初始化--编译、链接--运行
  angularjs中的服务,绝大部分都有一个对应的provider,用于执行与之对应服务的功能或者进行配置
  比如: $filter,对应的就是$filterProvider
      $log 对应的$logProvider

二、路由
  SPA应用
    Single Page Application 单页面应用
      整个应用只有一个页面
      通过单个的页面来展示所有功能,通过ajax动态获取数据,然后进行实时渲染,将数据渲染到页面上
    单页面的特点:
      1. 不会产生页面的跳转
        a标签要使用锚点
      2. 将若干功能集中到一个页面展示
        将每一个独立的功能做成一个单独的视图
      3. 使用ajax发送请求,动态获取数据
      4. 增强性能,提高用户的体验度
      5. 模仿手机app应用
    使用单页面应用的要求:
      1. 只能有一个页面,但是可以有多个视图
      2. 链接必须使用锚点
  
    前段中的路由就是锚点,angularjs对这个实现原理进行了封装,将锚点的变化封装成路由(route)

  路由的使用
  1. 引入文件
    必须先引入angularjs,然后再引入route
  2. 定义ng-app,创建应用模块
    因为使用了路由模块,所以在创建应用模块时,要声明依赖关系
    var app = angular.module('app', ["ngRoute"]);
  3. 配置路由
    使用$routeProvider对象调用when方法来进行具体的配置
    最后一个可以是otherwise,作为对when的一个补充
      when方法中有2个参数,第一个字符串,表示处理的锚点值
      第二个json对象,表示返回的内容,有个可选属性:
        template: 返回一个简单的字符串
        templateUrl: 返回指定的视图,如果视图中不需要数据填充,则可单独使用,如果需要数据填坑,则必须配合controller使用
        controller: 调用某个控制器,将控制器中绑定的数据发送给templateUrl指定的视图,必须配合templateUrl使用
        redirectTo: 调用别的路由处理,重定向

  4. 配置完路由以后,编写视图
    在视图页面中写一个占位符(在某个节点中添加指令ng-view)
    ng-view只负责视图数据的展示,不负责数据的解析